!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module mrqcof__user__routines 
    interface mrqcof_user_interface 
        subroutine funk(e_x_1_i_e,a,npar,yfit,dyda) ! in :calibrate_wrapper:mrqfit2d.f:mrqcof:unknown_interface
            real :: e_x_1_i_e
            real dimension(npar) :: a
            integer optional,check(len(a)>=npar),depend(a) :: npar=len(a)
            real :: yfit
            real dimension(20) :: dyda
        end subroutine funk
    end interface mrqcof_user_interface
end python module mrqcof__user__routines
python module calibrate_wrapper ! in 
    interface  ! in :calibrate_wrapper
        subroutine calibrate(plottype,filename,output,logfile) ! in :calibrate_wrapper:calibrate.f
            character*24 :: plottype
            character*80 :: filename
            character*80 :: output
            character*80 :: logfile
        end subroutine calibrate
        subroutine lambda(x,p,npar,wave,dwdp) ! in :calibrate_wrapper:calibrate.f
            real dimension(4) :: x
            real dimension(7) :: p
            integer :: npar
            real :: wave
            real dimension(7) :: dwdp
        end subroutine lambda
        subroutine mrqfit2d(x,y,sig,mdata,ndata,a,afit,npar,covar,chisq,funk) ! in :calibrate_wrapper:mrqfit2d.f
            real dimension(mdata,ndata) :: x
            real dimension(ndata),depend(ndata) :: y
            real dimension(ndata),depend(ndata) :: sig
            integer optional,check(shape(x,0)==mdata),depend(x) :: mdata=shape(x,0)
            integer optional,check(shape(x,1)==ndata),depend(x) :: ndata=shape(x,1)
            real dimension(npar) :: a
            logical dimension(npar),depend(npar) :: afit
            integer optional,check(len(a)>=npar),depend(a) :: npar=len(a)
            real dimension(npar,npar),depend(npar,npar) :: covar
            real :: chisq
            real :: funk
        end subroutine mrqfit2d
        subroutine mrqcof(x,y,sig,mdata,ndata,a,afit,npar,nfit,alpha,beta,nalp,chisq,funk) ! in :calibrate_wrapper:mrqfit2d.f
            use mrqcof__user__routines
            real dimension(mdata,ndata) :: x
            real dimension(ndata),depend(ndata) :: y
            real dimension(ndata),depend(ndata) :: sig
            integer optional,check(shape(x,0)==mdata),depend(x) :: mdata=shape(x,0)
            integer optional,check(shape(x,1)==ndata),depend(x) :: ndata=shape(x,1)
            real dimension(npar) :: a
            logical dimension(npar),depend(npar) :: afit
            integer optional,check(len(a)>=npar),depend(a) :: npar=len(a)
            integer :: nfit
            real dimension(nalp,nalp) :: alpha
            real dimension(nalp),depend(nalp) :: beta
            integer optional,check(shape(alpha,0)==nalp),depend(alpha) :: nalp=shape(alpha,0)
            real :: chisq
            external funk
        end subroutine mrqcof
        subroutine gaussj(a,b,n,np,trouble) ! in :calibrate_wrapper:gaussj.f
            real dimension(np,np) :: a
            real dimension(np),depend(np) :: b
            integer :: n
            integer optional,check(shape(a,0)==np),depend(a) :: np=shape(a,0)
            logical :: trouble
        end subroutine gaussj
    end interface 
end python module calibrate_wrapper

! This file was auto-generated with f2py (version:1).
! See http://cens.ioc.ee/projects/f2py2e/
